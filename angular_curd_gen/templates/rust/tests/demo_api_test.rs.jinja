use axum::{
    http::StatusCode,
};
use {{ app_name }}::utils::test::{get_response, post_response};

#[tokio::test]
async fn test_get_by_redis() {
    let response = get_response("/demo/redis/demo?key=test", "".to_string(), "".to_string()).await;
    assert_eq!(response.status(), StatusCode::OK);

    let response = get_response("/demo/redis/demo?key=not_exist_key", "".to_string(), "".to_string()).await;
    assert_eq!(response.status(), StatusCode::BAD_REQUEST);
}


#[tokio::test]
async fn test_set_redis_key() {
    let json = serde_json::json!({
        "key": format!("test_{}", chrono::Local::now().timestamp()),
        "value": "test"
    });
    let response = post_response("/demo/redis/demo", json.to_string(), "".to_string()).await;
    assert_eq!(response.status(), StatusCode::CREATED);
}

#[tokio::test]
async fn test_set_mongo_record() {
    let response = post_response("/demo/mongo/demo", "".to_string(), "".to_string()).await;
    assert_eq!(response.status(), StatusCode::CREATED);
}